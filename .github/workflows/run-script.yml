name: Run Scraper Script

on:
  workflow_dispatch:
    inputs:
      arg1:
        description: 'Lesson URL to scrape'
        required: true
        type: string

      arg2:
        description: 'Message (not used by parser)'
        required: true
        type: string

      cred:
        description: 'Headers JSON (including cookies)'
        required: true
        type: string

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v3

      - name: ⚡ Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: 🧠 Encode message
        id: encode
        run: |
          message=$(echo '${{ inputs.arg2 }}' | base64 -w 0)
          
      - name: 📦 Install dependencies and manually install Chromium
        run: |
          echo "📦 Running npm install (skip Chromium)..."
          npm install

          echo "⬇️ Installing Chromium manually for Puppeteer..."
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD= node node_modules/puppeteer/install.js
          echo "✅ Chromium installed and install step complete"
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          

      - name: 🏃 Run scraper script
        env:
          SECURE_COOKIE: "__cf_bp=${{ secrets.CF_BP }}; cf_clearance=${{ secrets.CF_CLEARANCE }}"
        run: |
          echo "🛠️ Writing headers.json"
          echo '${{ inputs.cred }}' > headers.json

          echo "🔗 Running parser for: ${{ inputs.arg1 }}"
          message=$(echo '${{ steps.decode.outputs.message }}' | base64 -d)
          OUTPUT=$(node parser.mjs "${{ inputs.arg1 }}" "$message")

          echo "✅ Scraping complete. Markdown output below:"
          echo "$OUTPUT"
